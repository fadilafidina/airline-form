{"ast":null,"code":"var _jsxFileName = \"/Users/fadilafidina/src/food/todolist/src/Body.js\";\nimport React from 'react';\nimport todoData from './TodoData';\nimport { ToDoItem } from \"./ToDoItem\";\nexport class Body extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todoData: todoData\n    };\n  }\n\n  render() {\n    const todoComponents = this.state.todoData.map(todo => React.createElement(ToDoItem, {\n      text: todo.text,\n      completed: todo.completed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"These are my to do\"), todoComponents);\n  }\n\n}","map":{"version":3,"sources":["/Users/fadilafidina/src/food/todolist/src/Body.js"],"names":["React","todoData","ToDoItem","Body","Component","constructor","state","render","todoComponents","map","todo","text","completed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAO,MAAMC,IAAN,SAAmBC,SAAnB,CAA6B;AAChCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTL,MAAAA,QAAQ,EAAEA;AADD,KAAb;AAGH;;AACDM,EAAAA,MAAM,GAAG;AACL,UAAMC,cAAc,GAAG,KAAKF,KAAL,CAAWL,QAAX,CAAoBQ,GAApB,CAAwBC,IAAI,IAAI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAI,CAACC,IAArB;AAA2B,MAAA,SAAS,EAAED,IAAI,CAACE,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhC,CAAvB;AACA,WAAQ;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADI,EAEHJ,cAFG,CAAR;AAIH;;AAb+B","sourcesContent":["import React from 'react';\nimport todoData from './TodoData';\nimport { ToDoItem } from \"./ToDoItem\";\nexport class Body extends Component {\n    constructor() {\n        super();\n        this.state = {\n            todoData: todoData,\n        };\n    }\n    render() {\n        const todoComponents = this.state.todoData.map(todo => <ToDoItem text={todo.text} completed={todo.completed} />);\n        return (<div className=\"content\">\n            <h2 className=\"heading\">These are my to do</h2>\n            {todoComponents}\n        </div>);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}