{"ast":null,"code":"var _jsxFileName = \"/Users/fadilafidina/src/food/todolist/src/Body.js\";\nimport React, { Component } from 'react';\nimport todoData from './TodoData';\nimport { ToDoItem } from \"./ToDoItem\";\nexport class Body extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todoData: todoData,\n      isLoading: true,\n      unreadMessages: [// \"Your mum\", \"Hello\"\n      ],\n      character: {},\n      requestLoading: false,\n      firstName: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleType = this.handleType.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      requestLoading: true\n    });\n    fetch(\"https://swapi.co/api/people/1/\").then(response => response.json()).then(data => this.setState({\n      character: data,\n      requestLoading: false\n    }));\n  }\n\n  handleChange(idToMatch) {\n    this.setState(prevState => {\n      //make new array first\n      const updatedTodos = prevState.todoData.map(t => {\n        if (t.id === idToMatch) {\n          t.completed = !t.completed;\n        }\n\n        return t;\n      }); // set the new state to the new todos with the updated state\n\n      return {\n        todoData: updatedTodos\n      };\n    });\n    console.log(\"Changed\", idToMatch);\n  }\n\n  handleType(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    console.log(this.state.firstName);\n  }\n\n  render() {\n    const todoComponents = this.state.todoData.map(todo => React.createElement(ToDoItem, {\n      id: todo.id,\n      text: todo.text,\n      completed: todo.completed,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n    const textForName = this.state.requestLoading ? \"Loading\" : `Name is ${this.state.character.name}`;\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"These are my to do\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, textForName), this.state.isLoading ? React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" Loading \") : React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" ok \"), this.state.unreadMessages.length > 0 ? React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"You have \", this.state.unreadMessages.length, \" unread messages\") : \"nothing!!!\", React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firstName\",\n      placeholder: \"First Name\",\n      onChange: this.handleType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lastName\",\n      placeholder: \"Last Name\",\n      onChange: this.handleType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.firstName), todoComponents);\n  }\n\n}","map":{"version":3,"sources":["/Users/fadilafidina/src/food/todolist/src/Body.js"],"names":["React","Component","todoData","ToDoItem","Body","constructor","state","isLoading","unreadMessages","character","requestLoading","firstName","handleChange","bind","handleType","componentDidMount","setState","fetch","then","response","json","data","idToMatch","prevState","updatedTodos","map","t","id","completed","console","log","event","target","name","value","render","todoComponents","todo","text","textForName","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport todoData from './TodoData';\nimport { ToDoItem } from \"./ToDoItem\";\n\n\nexport class Body extends Component {\n    constructor() {\n        super();\n        this.state = {\n            todoData: todoData,\n            isLoading: true,\n            unreadMessages: [\n                // \"Your mum\", \"Hello\"\n            ],\n            character: {},\n            requestLoading: false,\n            firstName: \"\",\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleType = this.handleType.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            requestLoading: true\n        });\n        fetch(\"https://swapi.co/api/people/1/\")\n        .then(response => response.json())\n        .then(data => this.setState({\n            character: data,\n            requestLoading: false,\n        }));\n    };\n\n    handleChange(idToMatch) {\n        this.setState(prevState => {\n            //make new array first\n            const updatedTodos = prevState.todoData.map(t => {\n                if(t.id === idToMatch) {\n                    t.completed = !t.completed;\n                }\n                return t;\n            });\n\n            // set the new state to the new todos with the updated state\n            return {\n                todoData: updatedTodos,\n            }\n        })\n        console.log(\"Changed\", idToMatch);\n    }\n\n    handleType(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n        console.log(this.state.firstName);\n    };\n\n    render() {\n        const todoComponents = this.state.todoData.map(\n            todo => <ToDoItem id={todo.id} text={todo.text} completed={todo.completed} onChange={this.handleChange} />);\n\n        const textForName = this.state.requestLoading \n        ? \"Loading\"\n        : `Name is ${this.state.character.name}`;\n\n        return (<div className=\"content\">\n            <h2 className=\"heading\">These are my to do</h2>\n\n            <p>{textForName}</p>\n        \n            {this.state.isLoading ? <h2> Loading </h2> : <h2> ok </h2>}\n            {this.state.unreadMessages.length > 0\n            ? <h2>You have {this.state.unreadMessages.length} unread messages</h2>\n            : \"nothing!!!\"}\n\n            <form>\n                <input type=\"text\" name=\"firstName\" placeholder=\"First Name\" onChange={this.handleType}></input>\n                <input type=\"text\" name=\"lastName\" placeholder=\"Last Name\" onChange={this.handleType}></input>\n            </form>\n            <h2>{this.state.firstName}</h2>\n\n            {todoComponents}\n        </div>);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}