{"ast":null,"code":"var _jsxFileName = \"/Users/fadilafidina/src/food/todolist/src/ToDoItem.js\";\nimport React from 'react';\nexport function ToDoItem(props) {\n  const completedStyle = {\n    fontStyle: \"italic\",\n    color: \"#cdcdcd\",\n    textDecoration: \"line-through\"\n  };\n  return React.createElement(\"div\", {\n    className: \"todo-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: props.completed,\n    onChange: () => props.onChange(props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    style: props.completed ? completedStyle : nulls,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.text), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/fadilafidina/src/food/todolist/src/ToDoItem.js"],"names":["React","ToDoItem","props","completedStyle","fontStyle","color","textDecoration","completed","onChange","id","nulls","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAE5B,QAAMC,cAAc,GAAG;AACnBC,IAAAA,SAAS,EAAE,QADQ;AAEnBC,IAAAA,KAAK,EAAE,SAFY;AAGnBC,IAAAA,cAAc,EAAE;AAHG,GAAvB;AAMA,SAAQ;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,EAAEJ,KAAK,CAACK,SAAtC;AAAiD,IAAA,QAAQ,EAAE,MAAML,KAAK,CAACM,QAAN,CAAeN,KAAK,CAACO,EAArB,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,EAEJ;AAAO,IAAA,KAAK,EAAEP,KAAK,CAACK,SAAN,GAAkBJ,cAAlB,GAAmCO,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0DR,KAAK,CAACS,IAAhE,CAFI,OAE0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF1E,CAAR;AAIH","sourcesContent":["import React from 'react';\nexport function ToDoItem(props) {\n\n    const completedStyle = {\n        fontStyle: \"italic\",\n        color: \"#cdcdcd\",\n        textDecoration: \"line-through\"\n    }\n\n    return (<div className=\"todo-item\">\n        <input type=\"checkbox\" checked={props.completed} onChange={() => props.onChange(props.id)}></input> \n        <label style={props.completed ? completedStyle : nulls} >{props.text}</label> <br />\n    </div>)\n}\n"]},"metadata":{},"sourceType":"module"}